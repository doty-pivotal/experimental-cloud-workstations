---
## Enable ssh to localhost without a passphrase

- name: Generate ssh keys
  user:
    name: "{{ ansible_ssh_user }}"
    generate_ssh_key: yes
    state: present
  register: ssh_keys

- block:
  - name: Configure auto-login on localhost
    become: no
    shell: cat /home/{{ ansible_ssh_user }}/.ssh/id_rsa.pub >> /home/{{ ansible_ssh_user }}/.ssh/authorized_keys

  - name: Make localhost known to ssh
    become: no
    shell: /usr/bin/ssh-keyscan -H {{ item }} >> /home/{{ ansible_ssh_user }}/.ssh/known_hosts
    with_items:
      - 127.0.0.1
      - localhost
      - "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      - "{{ inventory_hostname }}"

  when: ssh_keys.changed

- meta: flush_handlers

## Basic system setup

# TODO: Put this behind a RHEL version branch, and on < 7 disable IP tables
- name: Stop and disable iptables
  become: yes
  service: name=firewalld state=stopped enabled=no
  changed_when: False


- name: Disable selinux
  become: yes
  #lineinfile: dest=/etc/selinux/config regexp='^SELINUX=' line='SELINUX=disabled' state=present
  selinux: state=disabled
  notify:
    - restart system
    - waiting for server to come back after reboot


# TODO: Pulled from Andrea's GPDB4 stuff. Evaluate values after unblocked.
- name: Modify /etc/sysctl.conf
  become: yes
  lineinfile:
    dest: /etc/sysctl.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '^kernel.shmmax', line: 'kernel.shmmax = 500000000', state: present }
    - { regexp: '^kernel.shmmni', line: 'kernel.shmmni = 4096', state: present }
    - { regexp: '^kernel.shmall', line: 'kernel.shmall = 4000000000', state: present }
    - { regexp: '^kernel.sem', line: 'kernel.sem = 250 512000 100 2048', state: present }
    - { regexp: '^kernel.sysrq', line: 'kernel.sysrq = 1', state: present }
    - { regexp: '^kernel.core_uses_pid', line: 'kernel.core_uses_pid = 1', state: present }
    - { regexp: '^kernel.msgmnb', line: 'kernel.msgmnb = 65536', state: present }
    - { regexp: '^kernel.msgmax', line: 'kernel.msgmax = 65536', state: present }
    - { regexp: '^kernel.msgmni', line: 'kernel.msgmni = 2048', state: present }
    - { regexp: '^net.ipv4.tcp_syncookies', line: 'net.ipv4.tcp_syncookies = 1', state: present }
    - { regexp: '^net.ipv4.ip_forward', line: 'net.ipv4.ip_forward = 0', state: present }
    - { regexp: '^net.ipv4.conf.default.accept_source_route', line: 'net.ipv4.conf.default.accept_source_route = 0', state: present }
    - { regexp: '^net.ipv4.tcp_tw_recycle', line: 'net.ipv4.tcp_tw_recycle = 1', state: present }
    - { regexp: '^net.ipv4.tcp_max_syn_backlog', line: 'net.ipv4.tcp_max_syn_backlog = 4096', state: present }
    - { regexp: '^net.ipv4.conf.all.arp_filter', line: 'net.ipv4.conf.all.arp_filter = 1', state: present }
    - { regexp: '^net.ipv4.ip_local_port_range', line: 'net.ipv4.ip_local_port_range = 1025 65535', state: present }
    - { regexp: '^net.core.netdev_max_backlog', line: 'net.core.netdev_max_backlog = 10000', state: present }
    - { regexp: '^net.core.rmem_max', line: 'net.core.rmem_max = 2097152', state: present }
    - { regexp: '^net.core.wmem_max', line: 'net.core.wmem_max = 2097152', state: present }
    - { regexp: '^vm.overcommit_memory', line: 'vm.overcommit_memory = 2', state: present }
  notify:
    - reload sysctl


- name: Modify /etc/ssh/sshd_config
  become: yes
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '^PermitRootLogin', line: 'PermitRootLogin yes', state: present }
  notify:
    - reload sshd


# move the security limits in it's own file,
# instead of adding them to the main config file
- name: Security limits
  become: yes
  copy: src=security_limits.conf dest=/etc/security/limits.d/95-gpdb.conf
  notify:
    - restart system
    # TODO: this isn't playing well with Vagrant
    # - waiting for server to come back after reboot

# FIXME: XFS options
# FIXME: I/O scheduler

- meta: flush_handlers
